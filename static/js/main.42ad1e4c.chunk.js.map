{"version":3,"sources":["components/card.jsx","utils/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","billInput","tipPercentage","noPeople","tipAmount","totalAmount","data","setData","error","idRadio","control","setControl","parseFloat","totalPerson","handleRadioInput","event","document","getElementsByClassName","value","target","id","number","Number","name","useEffect","tipClient","totalBill","noPerson","isFinite","isNaN","toFixed","calculateIndividualTip","totalWithTip","totalDivided","calculateTotalWithTip","className","htmlFor","type","placeholder","onChange","onFocus","getElementById","checked","style","border","onClick","reset","App","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.42ad1e4c.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  calculateIndividualTip,\r\n  calculateTotalWithTip,\r\n} from \"../utils/calculate\";\r\nimport \"../assets/styles/calculator.scss\";\r\n\r\nfunction Card() {\r\n  const [data, setData] = useState({\r\n    billInput: 0,\r\n    tipPercentage: 0,\r\n    noPeople: 0,\r\n    tipAmount: \"0.00\",\r\n    totalAmount: \"0.00\",\r\n  });\r\n  const [control, setControl] = useState({ error: \"\", idRadio: \"\" });\r\n  const billInput = parseFloat(data[\"billInput\"], 10);\r\n  const totalPerson = parseFloat(data[\"noPeople\"], 10);\r\n  const tipPercentage = parseFloat(data[\"tipPercentage\"], 10);\r\n\r\n  function handleInputChange(event) {\r\n    const number = parseFloat(event.target.value, 10);\r\n    setData({ ...data, [event.target.name]: number });\r\n  }\r\n\r\n  function handlePersonsChange(event) {\r\n    const number = Number(event.target.value);\r\n    const errorBorder = \"2px solid #f0613d\";\r\n\r\n    if (number === 0) {\r\n      setControl({ ...control, error: \"Can't be zero\" });\r\n      event.target.style.border = errorBorder;\r\n    } else if (number !== 0) {\r\n      setControl({ ...control, error: \"\" });\r\n      event.target.style.border = \"\";\r\n    }\r\n    setData({ ...data, [event.target.name]: number });\r\n  }\r\n\r\n  function handleRadioInput(event) {\r\n    document.getElementsByClassName(\"input-percent\")[0].value = \"\";\r\n    const idRadio = event.target.id;\r\n    const number = Number(event.target.value);\r\n    setControl({ ...control, idRadio: idRadio });\r\n    setData({ ...data, [event.target.name]: number });\r\n  }\r\n\r\n  useEffect(() => {\r\n    var tipClient = calculateIndividualTip(\r\n      billInput,\r\n      totalPerson,\r\n      tipPercentage\r\n    );\r\n    var totalWithTip = calculateTotalWithTip(billInput, totalPerson, tipClient);\r\n\r\n    setData((data) => ({\r\n      ...data,\r\n      tipAmount: tipClient,\r\n      totalAmount: totalWithTip,\r\n    }));\r\n  }, [billInput, totalPerson, tipPercentage]);\r\n\r\n  function handleFocusedInput() {\r\n    if (control.idRadio !== \"\") {\r\n      const button = document.getElementById(control.idRadio);\r\n      button.checked = false;\r\n    }\r\n    setData({ ...data, tipPercentage: 0 });\r\n  }\r\n\r\n  function resetInputs() {\r\n    setData({\r\n      ...data,\r\n      billInput: 0,\r\n      tipPercentage: 0,\r\n      noPeople: 0,\r\n      tipAmount: \"0.00\",\r\n      totalAmount: \"0.00\",\r\n    });\r\n    document.getElementById(\"calculator\").reset();\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card\">\r\n        <div className=\"calculator-in\">\r\n          <form id=\"calculator\">\r\n            <div className=\"bill\">\r\n              <label htmlFor=\"billInput\">\r\n                <h4>Bill</h4>\r\n              </label>\r\n              <div>\r\n                <span className=\"icon-dollar\"></span>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"billInput\"\r\n                  placeholder=\"0\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <h4 className=\"label-tip\">Select Tip %</h4>\r\n            <div className=\"tip\">\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"5\"\r\n                  id=\"tip-5\"\r\n                  name=\"tipPercentage\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n                <label htmlFor=\"tip-5\" id=\"tip-5-label\" className=\"label-radio\">\r\n                  5%\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"10\"\r\n                  id=\"tip-10\"\r\n                  name=\"tipPercentage\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n                <label\r\n                  htmlFor=\"tip-10\"\r\n                  id=\"tip-10-label\"\r\n                  className=\"label-radio\"\r\n                >\r\n                  10%\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"15\"\r\n                  id=\"tip-15\"\r\n                  name=\"tipPercentage\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n                <label\r\n                  htmlFor=\"tip-15\"\r\n                  id=\"tip-15-label\"\r\n                  className=\"label-radio\"\r\n                >\r\n                  15%\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"25\"\r\n                  id=\"tip-25\"\r\n                  name=\"tipPercentage\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n                <label\r\n                  htmlFor=\"tip-25\"\r\n                  id=\"tip-25-label\"\r\n                  className=\"label-radio\"\r\n                >\r\n                  25%\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"50\"\r\n                  id=\"tip-50\"\r\n                  name=\"tipPercentage\"\r\n                  onChange={handleRadioInput}\r\n                />\r\n                <label\r\n                  htmlFor=\"tip-50\"\r\n                  id=\"tip-50-label\"\r\n                  className=\"label-radio\"\r\n                >\r\n                  50%\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Custom\"\r\n                  name=\"tipPercentage\"\r\n                  className=\"input-percent\"\r\n                  onChange={handleInputChange}\r\n                  onFocus={handleFocusedInput}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"people\">\r\n              <div className=\"people-label\">\r\n                <label htmlFor=\"noPeople\">\r\n                  <h4>Number of People</h4>\r\n                </label>\r\n                <span className=\"error\">{control.error}</span>\r\n              </div>\r\n\r\n              <div>\r\n                <span className=\"icon-person\"></span>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"noPeople\"\r\n                  placeholder=\"0\"\r\n                  id=\"people-input\"\r\n                  onChange={handlePersonsChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"calculator-out\">\r\n          <div className=\"tipAmount\">\r\n            <div>\r\n              <h5>Tip Amount</h5>\r\n              <p>/ person</p>\r\n            </div>\r\n            <h2>${data[\"tipAmount\"]}</h2>\r\n          </div>\r\n          <div className=\"total\">\r\n            <div>\r\n              <h5>Total</h5>\r\n              <p>/ person</p>\r\n            </div>\r\n            <h2>${data[\"totalAmount\"]}</h2>\r\n          </div>\r\n          <div className=\"separator\" />\r\n          <button className=\"reset-btn\" onClick={resetInputs}>\r\n            RESET\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export function calculateIndividualTip(totalBill, noPerson, tipPercentage) {\r\n  // totalBill: total to pay\r\n  // noPerson: number of clients\r\n  // tipPercentage: percentage tip\r\n  var tipAmount = (totalBill / 100) * tipPercentage;\r\n  var tipClient = tipAmount / noPerson;\r\n\r\n  if (isFinite(tipClient) === false || isNaN(tipClient)) {\r\n    tipClient = 0;\r\n  }\r\n\r\n  tipClient = tipClient.toFixed(2);\r\n\r\n  return tipClient;\r\n}\r\n\r\nexport function calculateTotalWithTip(\r\n  totalBill = 0, // totalBill: total to pay\r\n  noPerson = 0, // noPerson: number of clients\r\n  tipAmount = 0 // tipAmount: total amount of tip to pay\r\n) {\r\n  var totalDivided = totalBill / noPerson || 0;\r\n  if (isFinite(totalDivided) === false) {\r\n    totalDivided = 0.0;\r\n  }\r\n\r\n  totalDivided = parseFloat(totalDivided);\r\n  tipAmount = parseFloat(tipAmount);\r\n\r\n  var totalWithTip = totalDivided + tipAmount;\r\n  totalWithTip = totalWithTip || 0;\r\n  totalWithTip = totalWithTip.toFixed(2);\r\n\r\n  return totalWithTip;\r\n}\r\n","import { Fragment } from \"react\";\nimport \"./assets/styles/App.scss\";\nimport Card from \"./components/card\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <img src=\"./images/logo.svg\" className=\"img-logo\" alt=\"logo\" />\n        <Card />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}